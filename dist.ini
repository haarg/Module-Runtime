name              = Module-Runtime
author            = Andrew Main (Zefram) <zefram@fysh.org>
license           = Perl_5
copyright_holder  = Andrew Main, Graham Knop
copyright_year    = 2025

[%Mint]
provider  = Author::HAARG
profile   = default

;;; Gather
[Git::GatherDir]
exclude_filename = Makefile.PL
exclude_filename = META.json
exclude_filename = LICENSE
exclude_filename = README.md

[GatherFile]
filename = .perlcriticrc

;;; Metadata
[Git::Contributors]

[MetaProvides::Package]

[MetaResources]
bugtracker.web    = https://rt.cpan.org/Public/Dist/Display.html?Name=Module-Runtime
bugtracker.mailto = bug-Module-Runtime@rt.cpan.org
repository.url    = https://github.com/haarg/Module-Runtime.git
repository.web    = https://github.com/haarg/Module-Runtime
repository.type   = git

[PrereqsFile]

[UseUnsafeInc]
dot_in_INC = 0

;;; Modification
[PodWeaver]
; authordep Pod::Weaver::Section::Contributors
; authordep Pod::Weaver::Plugin::StopWords

;;; Extra Files
[License]
[MetaJSON]
[MetaYAML]
[Manifest]
[Pod2Readme]

;;; Installer
[MakeMaker]

[StaticInstall]
mode = on

;;; Tests
[MetaTests]
[MojibakeTests]
[PodSyntaxTests]
[Test::CPAN::Changes]
:version = 0.013
filename = xt/author/cpan-changes.t
[Test::ChangesHasContent]
;[Test::Compile] ; only one module, don't need to test in isolation
[Test::EOL]
[Test::Kwalitee]
filename = xt/author/kwalitee.t
skiptest = use_strict
[Test::MinimumVersion]
[Test::NoTabs]
[Test::Perl::Critic]
:version = 3.003
profile = .perlcriticrc
verbose = 8
[Test::Pod::Coverage::TrustMe]
[Test::PodSpelling]
[Test::Portability]
options = test_one_dot = 0
;[Test::ReportPrereqs] ; we have no prereqs
[Test::Version]

;;; Repo files
[CopyFilesFromRelease]
filename = Makefile.PL
filename = META.json
filename = LICENSE
[ReadmeAnyFromPod / ReadmeGFMInRoot]
phase = release

[Regenerate::AfterReleasers]
plugin = CopyFilesFromRelease
plugin = ReadmeGFMInRoot

;;; Release
[Libarchive]
[TestRelease]
[RunExtraTests]
[ConfirmRelease]
[UploadToCPAN]

[Git::Check]
[Git::Remote::Check]
branch = master
[@Git::VersionManager]
-remove = Prereqs
commit_files_after_release = Makefile.PL
commit_files_after_release = META.json
commit_files_after_release = LICENSE
commit_files_after_release = README.md
NextRelease.format = %-6v  %{yyyy-MM-dd}d%{ (TRIAL RELEASE)}T
[Git::Push]
